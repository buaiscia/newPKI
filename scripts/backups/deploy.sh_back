#!/bin/bash


LOGGING="/home/appsupp/logging.txt"

# -------------
# BACKUP MSG FILES
#--------------

function backup_msg_file_html {
	deploTime=$(date +"%y%m%d%H%M")
	sudo cp -v $FEW_PATH"/app/translations/messages.en.po" $BACKUP_PATH"msghtml/messages.en.po_$deploTime"  >> $LOGGING
	sudo cp -v $FEW_PATH"/app/translations/messages.es.po" $BACKUP_PATH"msghtml/messages.es.po_$deploTime"  >> $LOGGING
}

function backup_msg_file_api {

        deploTime=$(date +"%y%m%d%H%M")
        sudo cp -v $API_PATH"/translations/messages.en.po" $BACKUP_PATH"msgapi/messages.en.po_$deploTime"  >> $LOGGING
        sudo cp -v $API_PATH"/translations/messages.es.po" $BACKUP_PATH"msgapi/messages.es.po_$deploTime"  >> $LOGGING

}

function restore_msg_file_html {

	for file in $BACKUP_PATH"msghtml/messages.en.po_$deploTime"; do 
               filnam="$(basename $file)"; 
               sudo cp -v $file "$FEW_PATH/app/translations/"${filnam%%_*};
               done  >> $LOGGING
        for file in $BACKUP_PATH"msghtml/messages.es.po_$deploTime"; do 
               filnam2="$(basename $file)"; 
               sudo cp -v $file "$FEW_PATH/app/translations/"${filnam2%%_*}; 
               done  >> $LOGGING

}

function restore_msg_file_api {

        for file in $BACKUP_PATH"msgapi/messages.en.po_$deploTime"; do 
		filnam="$(basename $file)"; 
		sudo cp -v $file "$API_PATH/translations/"${filnam%%_*}; 
		done  >> $LOGGING
        for file in $BACKUP_PATH"msgapi/messages.es.po_$deploTime"; do 
		filnam2="$(basename $file)"; 
		sudo cp -v $file "$API_PATH/translations/"${filnam2%%_*}; 
		done  >> $LOGGING

}

#------------
# ACTION_FEW (html)
#---------------


function action_few {

        FEW_PATH="/var/www/html"

		
                echo "START AT `date -u`" >> $LOGGING
                # backups applications to /home/appsupp/backup/
                sudo tar -zcf $BACKUP_PATH"FEW_backup_$(date +"%Y-%m-%d_%H-%M").tar.gz" -C $FEW_PATH . && echo "--Backup of FEW package done" >> $LOGGING
		backup_msg_file_html
                shopt -s extglob
                # remove files (2 commands for FEW)
                sudo rm -rf '$FEW_PATH/app/!(logs)'  && echo "--Removal of config and app done"  >> $LOGGING
                sudo rm -rf '$FEW_PATH/!(logs|config|app)' && echo "--Removal of general files in $FEW_PATH done"  >> $LOGGING
                # extract packages provided by PunchKick to correct folders
                #sudo tar -zxf $filename -C $FEW_PATH --strip=1 && echo "--Package extracted" >> $LOGGING

		sudo tar -zxf $filename -C $FEW_PATH && echo "--Package extracted" >> $LOGGING
                # Compare config files
                cd $FEW_PATH/config
		restore_msg_file_html
                for string in $(grep -Eo '[a-Z].*:' $API_PATH/config/default.yml); do if ! grep -Fq "$string" $API_PATH/config/local.yml;then printf "\033[0;31m $string not found \033[0m \n";fi; done >> $LOGGING
                echo "--Please double check manually comparing the default.yml (provided in the package) with the local.yml and see if any new configuration was added" >> $LOGGING
                sudo chown -R apache:apache $FEW_PATH/ && echo "-- Chown into apache done" >> $LOGGING
                sudo /var/www/api/console assets:grab && echo "-- Assets grab done" >> $LOGGING
                sudo /usr/bin/systemctl restart php-fpm && echo "-- php-fpm restarted" >> $LOGGING
                sudo /usr/sbin/service httpd_web restart && echo "-- Service restarted" >> $LOGGING
		echo "END AT `date -u`" >> $LOGGING
		echo "--------------------------" >> $LOGGING

}


#--------------------
# Function: action_api
#--------------------

function action_api {

        API_PATH="/var/www/api"


        # backups applications to /home/appsupp/backup/
                
                echo "START AT $(date -u)" >> "$LOGGING"
                sudo tar -zcf $BACKUP_PATH"API_backup_$(date +"%Y-%m-%d_%H-%M").tar.gz" -C $API_PATH . && echo "-- Backup of API package done" >> "$LOGGING"
		backup_msg_file_api
                shopt -s extglob
                # remove files (2 commands for FEW)
                sudo rm -rf '$API_PATH/!(logs|config)' && echo "-- Removal of app done" >> $LOGGING
                # extract packages provided by PunchKick to correct folders
                #sudo tar -zxf $filename -C $API_PATH --strip=1 && echo "-- Package extracted" >> "$LOGGING"

		sudo tar -zxf $filename -C $API_PATH && echo "-- Package extracted" >> "$LOGGING"
		restore_msg_file_api
                # Compare config files
                cd $API_PATH/config
                for string in $(grep -Eo '[a-Z].*:' $API_PATH/config/default.yml); do if ! grep -Fq "$string" $API_PATH/config/local.yml;then printf "\033[0;31m $string not found \033[0m \n";fi; done >> $LOGGING
                echo "Please double check manually comparing the default.yml (provided in the package) with the local.yml and see if any new configuration was added." >> $LOGGING
                #sudo tar -zxfv $filename -C $API_PATH >> $LOGGING
                # Compare config files
                #cd $API_PATH/config
                #for string in $(grep -Eo '[a-Z].*: ' $API_PATH/config/default.yml); do if ! grep -Fq "$string" $API_PATH/config/local.yml;then printf "\033[0;31m $string not found \033[0m \n";fi; done >> $LOGGING
                #echo "Please double check manually comparing the default.yml (provided in the package) with the local.yml and see if any new configuration was added." >> $LOGGING
                sudo chown -R apache:apache $API_PATH/  && echo "-- Chown into apache done" >> $LOGGING
                sudo $API_PATH/console assets:grab && echo "-- Assets grab done" >> $LOGGING
                sudo /usr/bin/systemctl restart php-fpm && echo "-- php-fpm restarted" >> $LOGGING
                sudo $API_PATH/console migration:migrate && echo "-- Migration done" >> $LOGGING
                sudo /usr/sbin/service httpd_api restart && echo "-- Service restarted" >> $LOGGING
                echo "END AT $(date -u)" >> "$LOGGING"
		echo "--------------------------" >> $LOGGING		

}

#--------------------
# Function: action_admin
#--------------------


function action_admin {

                ADMIN_PATH="/var/www/admin"



        # backups applications to /home/appsupp/backup/
		
                echo "START AT `date -u`" >> $LOGGING
                sudo tar -zcf $BACKUP_PATH"ADMIN_backup_$(date +"%Y-%m-%d_%H-%M").tar.gz" -C $ADMIN_PATH . && echo "-- Backup of ADMIN package done" >> $LOGGING
                shopt -s extglob
                # remove files (2 commands for FEW)
                sudo rm -rf '$ADMIN_PATH/!(logs|config)'  && echo "-- Removal of app done" >> $LOGGING
                # extract packages provided by PunchKick to correct folders
                #sudo tar -zxf $filename -C $ADMIN_PATH --strip=1 && echo "-- Package extracted" >> $LOGGING
                
		sudo tar -zxf $filename -C $ADMIN_PATH && echo "-- Package extracted" >> $LOGGING
		# Compare config files
                cd $ADMIN_PATH/config
                for string in $(grep -Eo '[a-Z].*:' default.yml); do if ! grep -Fq "$string" local.yml;then printf "\033[0;31m $string not found \033[0m \n";fi; done >> $LOGGING
                echo "Please double check manually comparing the default.yml (provided in the package) with the local.yml and see if any new configuration was added."
                sudo chown -R apache:apache $ADMIN_PATH/  && echo "-- Chown into apache done" >> $LOGGING
                sudo /var/www/api/console assets:grab  && echo "-- Assets grab done" >> $LOGGING
                sudo /usr/bin/systemctl restart php-fpm && echo "-- php-fpm restarted" >> $LOGGING
                sudo /usr/sbin/service httpd_admin restart  && echo "-- Service restarted" >> $LOGGING
		echo "END AT `date -u`" >> $LOGGING
		echo "--------------------------" >> $LOGGING

    


}

#-------------
# Function: Text User Interface
#-------------

function tui {
        echo "Which package do you want to deploy?"
        echo "1) FEW"
        echo "2) API"
        echo "3) ADMIN"
        read -p "Choose number:" OPT
        case $OPT in
                "1") echo "You chose FEw" ;;
                "2") echo "You chose API" ;;
                "3") echo "You chose ADMIN" ;;
        esac
        echo
        if [[ $OPT == '1' ]]; then
                action_few
        elif [[ $OPT == '2' ]]; then
                action_api
        elif [[ $OPT == '3' ]]; then
                action_admin
        fi
}



BACKUP_PATH="/home/appsupp/backup/"



if [  "$1" != "" ]; then
         filename="$1"
fi


while [ "$2" != "" ]
do


        case $2 in
                few)   echo "you chose FEW package"
                        action_few
                        shift 2
                        break
                        ;;
                api)   echo "you chose API package" >> $LOGGING
                        action_api
                        shift 2
                        break
                        ;;
                admin) echo "you chose ADMIN package"
                        action_admin
                        shift 2
                        break
                        ;;
                *) echo "No parameters chosen" 2>&1
                 "$2" != ""#break
               ;;
        esac
done



# -----------------
# MAIN_PART
# ----------------
